
DROP TABLE IF EXISTS fact_sessions CASCADE;
DROP TABLE IF EXISTS dict_users CASCADE;

DROP INDEX IF EXISTS idx_users_id;
DROP INDEX IF EXISTS idx_users_login;
DROP INDEX IF EXISTS sessions_user_id_idx;


-- оставлять ли id? пока думаю да, так как для регистрации может не потребуется логин, например если есть email или авторизация через сторонний сервис (Яндекс, телеграм)
CREATE TABLE dict_users (
	id int GENERATED BY default AS IDENTITY NOT NULL,
	login text NULL,
	email text NULL,
	pass text NULL,
	salt text NULL,
	password_hint text NULL,
	name text NULL,
	avatar_url text NULL,
	telegram_id int null,
	created_at timestamp DEFAULT now() NOT NULL,
	updated_at timestamp DEFAULT now() NOT NULL,
	active boolean DEFAULT true NOT NULL,
	CONSTRAINT user_pk PRIMARY KEY (id),
	CONSTRAINT user_login_unique UNIQUE (login),
	CONSTRAINT telegram_id_unique UNIQUE (telegram_id)
);

INSERT INTO dict_users(
	login, pass, salt, password_hint, name, email, active)
	VALUES (
	'user',
	'1fe49dc2657227840a8b9d3bebf2a10aaf19e0d9219ffe0a7d7905ba067d722debeb9bad2f3ee71e06872b4d50d3c7a7965e4360ac2792f11ffb6a5f87e520e7',
	'38683eb569df483c83c1a0125559d9ae',
	'user',
	'Малышка',
	'petit@nv.vrn',
	true);
INSERT INTO dict_users
  (login, email, pass, salt, password_hint, "name", active, avatar_url)
VALUES (
 'awdawd',
  NULL,
  '8bd99a9432c5b4a7084b48ce3ceb4192ae219a2266c471bcef7c194108ebd4a559629cbbb59fd9ec594e59e02f6e7001a96c4126017e867ad296546a6f3ab550',
  'add260e63f59c2442e22e744499f9b3d',
  'awdawd',
  NULL,
  true,
  'https://poqlzpckkgvvinogmugh.supabase.co/storage/v1/object/public/photos/1c6b669f-f036-4608-a93e-0a12d7ebde1a'
  );
commit;




CREATE TABLE fact_sessions (
    user_id int NOT NULL,
	access_token text NOT NULL,
	refresh_token text NOT NULL,
	created_at timestamp DEFAULT now() NOT NULL,
	closed_at timestamp NULL,
	device text NULL,
	user_ip text NULL,
	CONSTRAINT sessions_access_unique UNIQUE (access_token),
	CONSTRAINT sessions_refresh_unique UNIQUE (refresh_token),
	CONSTRAINT sessions_users_fk FOREIGN KEY (user_id) REFERENCES dict_users(id) ON DELETE SET DEFAULT ON UPDATE SET default
);
CREATE INDEX sessions_user_id_idx ON fact_sessions USING btree (user_id);



